<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAkAAAAawAAAI8AAACfAAAAlwAAAJEAAACTAAAAkQAAAI8AAACPAAAAjwAAAI8AAACPAAAAjwAA
        AI8AAACPAAAAjwAAAI8AAACPAAAAjwAAAI8AAACPAAAAjwAAAI8AAACPAAAAawAAACQAAAAAAAAAAAAA
        AAAAAAAAAAAAAI1oSv+NaEr/jWhK/41oSv+NaEr/gmBE/3JUPP9yVDz/fVxC/4ZjRv+JZUj/imZJ/4xn
        Sf+MaEr/jGhK/4xoSv+NaEr/jWhK/41oSv+NaEr/jWhK/41oSv+NaEr/jWhK/41oSv8AAACPAAAAMAAA
        AAAAAAAAAAAAAAAAAAAAAAAAj2hL//////////////////////+mra7/oqKi/39/f/+UlJT/t7e3/9LS
        0v/o6Oj/9/f3//39/f/+/v7//v7+////////////////////////////////////////////j2lM/wAA
        AI8AAAAwAAAAAAAAAAAAAAAAAAAAAAAAAACRak3//////////////////////0lSVP8cIiX/QkxO/05P
        T/9jY2P/hISE/7a2tv/Z2dn/8PDw//v7+//+/v7/////////////////////////////////////////
        //+Qak3/AAAAjwAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAJJrT/////////7+///+/v///v7/vcLD/0BG
        R/8AAAD/DBAR/zM/Q/9GSUr/ZWVl/5CPj/+2tbX/09LS/+no6P/5+Pj//v39///+/v///v7///7+///+
        /v///v7//////5FsT/8AAACPAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAlG1R///////+/fz//v38//79
        /P/+/fz/Ji0u/294ev8AAAD/Zo2a/1yWqf9IYWr/R0pM/2JhYf+CgoH/qamo/9XU0//08/L//v38//79
        /P/+/fz//v38//79/P//////k25R/wAAAI8AAAAwAAAAAAAAAAAAAAAAAAAAAAAAAACVcFP///////38
        +//9/Pv//fz7//38+/+JkZL/BgcH/4COkf/I5vH/f6+//1+Yqv9VgI//RGp3/0JUWv9fYWH/kZCQ/8zM
        y//y8fD//Pv6//38+//9/Pv//fz7//////+Wb1P/AAAAjwAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAJdx
        Vf///////fv5//36+f/9+vn//fr5//Tz8v+rytH/5/r//9rp7v+iws3/a5uq/2KSoP9UgpH/QXCF/xdM
        j/9YV1f/ioiI/8LAv//r6Of//Pn4//36+f/9+vn//////5hxVf8AAACPAAAAMAAAAAAAAAAAAAAAAAAA
        AAAAAAAAmnRX///////8+ff//Pn3//z59//8+ff//Pn3/8na3f+3zdX/2unu/9rp7v+iws3/a5uq/zea
        1P8Vk/T/DH7m/xtNh/9KUFn/eXd2/7e1s//p5uX/+vf1//z59///////mnRX/wAAAI8AAAAwAAAAAAAA
        AAAAAAAAAAAAAAAAAACbdlr///////v39f/79/X/+/f1//v39f/79/X/7vDv/6fI0P+3zdX/4O/0/5G3
        wP9Iq9v/HrH8/xyh9v8Vk/T/DH7m/wtRpf9ASlX/cnBv/7Owr//l4uD/+PTy//////+cdlr/AAAAjwAA
        ADAAAAAAAAAAAAAAAAAAAAAAAAAAAJ55XP//////+vbz//r28//69vP/+vbz//r28//69vP/utHW/6bI
        0P+3zdX/bo6g/xat/P8Wrfz/HrH8/xyh9v8Vk/T/DH7m/wpRpf89SFj/cG5t/6+tq//j4N3//Pz8/554
        XP8AAACPAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAoHpe///////59PD/+fTw//n08P/59PD/+fTw//n0
        8P/e5OT/psjQ/3Sy4P+t2fv/PLX8/xat/P8Wrfz/HrH8/xyh9v8Vk/T/DH7m/wtRpf85SFv/bWtp/62p
        p//n5+f/nnld/wAAAI8AAAAwAAAAAAAAAAAAAAAAAAAAAAAAAACifGD///////jy7v/48u7/+PLu//jy
        7v/48+7/+PLu//fy7v+Ft+b/FnLa/0Od8P+k1Pr/PLX8/xat/P8Wrfz/HrH8/xyh9v8Vk/T/DH7m/wlR
        pv83R1v/bGlo/7CwsP+TcVf/AAAAkQAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAKV/Y///////9/Dr//fx
        6//38Ov/9/Dr//fw7P/38Ov/9/Dr/+bn7P+Wv+3/JXnY/0Od8P+e0fn/PLX8/xat/P8Wrfz/HrH8/xyh
        9v8Vk/T/DH7m/wlSpv83R1v/bm5u/3FXRP8AAACaAAAAMwAAAAAAAAAAAAAAAAAAAAAAAAAAp4Fm////
        ///27un/9u7p//bu6f/27un/9u7p//bu6f/27un/9u7p/+jo6f88lfX/FnLa/0Od8P+e0fn/PLX8/xat
        /P8Wrfz/HrH8/xyh9v8Vk/T/DH7m/wlSp/82SWH/SDgs/wAAALQAAABMAAAABwAAAAAAAAAAAAAAAAAA
        AACqhGj///////Xt5//17eb/9e3m//Xt5v/17eb/9e3m//Xt5v/17eb/9e3m/+Di5/86lPX/FnLa/0Od
        8P+e0fn/PLX8/xat/P8Wrfz/HrH8/xyh9v8Vk/T/DH7m/wlRp/8kMUX/AAAA0wAAAIAAAAAlAAAABQAA
        AAAAAAAAAAAAAKyGav//////9Orj//Tq4//06uP/9Ovj//Tr4//06uP/9Ovj//Tr4//06uP/9Orj/9/g
        5P84kvX/FnLa/0Od8P+Kx/f/PLX8/xat/P8Wrfz/HrH8/xyh9v8Vk/T/DH7m/x5Wmf8tPE7zAAAArwAA
        AF4AAAAiAAAABgAAAAAAAAAArolt///////z6OH/8+jh//Po4f/z6OH/8+jh//Po4f/z6OH/8+jh//Po
        4f/z6OH/8+jh/97e4v83kvX/FnLa/0Od8P+Kx/f/PLX8/xat/P8Wrfz/HrH8/xyh9v8pitT/j5KV/0dL
        Tv8vMjTfAAAAmgAAAF4AAAAkAAAABgAAAACwi2////////Ln3v/y597/8ufe//Ln3v/y597/8ufe//Ln
        3v/y597/8ufe//Ln3v/y597/8uff/93d4P8zkPX/FnLa/0Od8P+Kx/f/PLX8/xat/P8Wrfz/MqLc/5KR
        kv+kpKP/kZKT/0dKTf8yNDraAAAAmwAAAF4AAAAhAAAABLKOcv//////8eXc//Hl3P/x5dz/8eXc//Hl
        3P/x5dz/8eXc//Hl3P/x5dz/8eXc//Hl3P/x5dz/8eXc/9zb3v8xj/X/FnLa/0Od8P+Kx/f/PLX8/y6h
        3f+AgIH/lpOS/6ytrP+mpqX/kZOS/0ZJTv8cGk3eAAAAmAAAAFUAAAAZtpB0///////w49n/8OPZ//Dj
        2f/w49n/8OPZ//Dj2f/w49n/8OPZ//Dj2f/w49n/8OPZ//Dj2v/w49r/8OPZ/9vZ2/88k/P/FnLa/0Od
        8P+It9v/eX6C/3p5ev+Bf3//lJSV/6WmpP9laG7/NzmI/x0Vif8MCjvQAAAAjQAAAEO4k3b//////+/i
        1//v4df/7+HX/+/h1//v4tf/7+HX/+/h1//v4tf/7+HX/+/h1//v4df/7+HX/+/h1//v4df/7+HX/+Lb
        2P88k/L/MXfG/73Awf++urj/fnx9/3l5ev+Bf3//hIWE/1BQpv8iIpf/IiKX/x0ViP0HBiS6AAAAZ7qV
        ev//////7t/U/+7f1P/u39X/7t/U/+7f1P/u39X/7t/U/+7f1P/u4NT/7t/U/+7f1P/u4NT/7t/U/+7f
        1P/u39T/7uDU/93Tzv+Mioj/s7Ow/9DQz/+/v7//fXx8/3Z2ef9zdLz/Ozuu/0JCwP81N73/IiKX/xwa
        feoAAABdvJZ7///////t3tL/7d7S/+3e0v/t3tL/7d7S/+3e0v/t3tL/7d7S/+3e0v/t3tL/7d7S/+3e
        0v/t3tL/7d7S/+LQwv/i0ML/4tDC/8u+sv+MiIb/s7Ow/8PDwP+VlZH/oKDM/7Gx9P9zc97/Vlbd/0RE
        0P80Nrv9GRVvxwAAADC+mH7//////+zc0P/s3ND/7NzQ/+zc0P/s3dD/7NzQ/+zc0P/s3dD/7NzQ/+zc
        0f/s3ND/7NzQ/+zc0P/s3ND/4c7A/864pf/OuKX/zril/8Cvn/+OiYb/s7Ow/05Opv+Fhff/sbH0/729
        /f+BgfP/Wlri/j09uN4NDSs/AAAADMCbgP//////69vO/+vbzv/r287/69vO/+vbzv/r287/69vO/+vb
        zv/r287/69vO/+vbzv/r287/69vO/+vbzv/gzcD/zbek/////////////////+3s7v9iUqf/MzS4/1dX
        0v+Fhff/vb39/7q6+f11ddfYHx4+PgAAAAsAAAABwZ2B///////r2cz/69nM/+vZzP/r2c3/69rM/+vZ
        zP/r2c3/69rM/+vZzf/r2cz/69nM/+vZzP/r2cz/69nM/+DMvf/NtaP///////////////////////Py
        +v9dSbb/Nja2/1FS2/2CgvL5kJDcxR4eMC4AAAAJAAAAAQAAAADDnoP//////+rYy//q2cv/6tjL/+rY
        y//q2Mz/6tjL/+rYy//q2Mz/6tjL/+rZzP/q2Mv/6tjL/+rYy//q2Mv/38u8/8y0ov//////////////
        ////////9e/r/8Wkjf08IYbAOzC41Es8qnshIDMYAAAABQAAAAAAAAAAAAAAAMSghP//////6dfJ/+nX
        yf/p18n/6dfJ/+PQwf/j0MH/49DB/+PQwf/j0cH/49DB/+PQwf/j0MH/49HB/97Ku//ey7r/zLOg////
        //////////////Xv6//Ip479ZFJEdgAAABcAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxqGG////
        ///eybn/2cKx/9S9q//QuKX/zLOg/8yzoP/Ms6D/zLOg/8yzoP/Ms6D/zLOg/8yzoP/Ms6D/zLOg/8yz
        oP/Ms6D////////////28Ov/yamP/WVSRHYAAAAXAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADHo4j/////////////////////////////////////////////////////////////////////////
        ////////////////////////9vDr/8qqkfxnVEZ0AAAAFwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMijif/IpIn/yKSJ/8ijiP/Io4j/yKOJ/8ijif/Io4j/yKOJ/8ijif/IpIn/yKSJ/8ij
        if/IpIj/yKSI/8ijif/IpIn/yKOI/8ijiP/Hoof6h29cWQAAABEAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAA
        AB8AAAAfAAAAHwAAAB8AAAAPAAAABwAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAABwAAAD8AAAB/AAAA/wAAAf8=
</value>
  </data>
</root>